import{_ as e,c as a,o as s,a3 as i}from"./chunks/framework.kyodG8gS.js";const u=JSON.parse('{"title":"Nuevo Proyecto Laravel","description":"","frontmatter":{},"headers":[],"relativePath":"laravel/new-project.md","filePath":"laravel/new-project.md"}'),t={name:"laravel/new-project.md"},o=i('<h1 id="nuevo-proyecto-laravel" tabindex="-1">Nuevo Proyecto Laravel <a class="header-anchor" href="#nuevo-proyecto-laravel" aria-label="Permalink to &quot;Nuevo Proyecto Laravel&quot;">​</a></h1><p>Ubíquese dentro de la terminal en su directorio donde desea instalar el proyecto y ejecute el siguiente comando para descargar un nuevo proyecto.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> laravel/laravel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crud-todo-laravel</span></span></code></pre></div><p>Luego, para instalar los paquetes (dependencias) ejecute:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -vvv</span></span></code></pre></div><p>Verifique que en el archivo <code>.env</code> el valor de la constante <code>APP_KEY</code> se generó correctamente. De lo contrario (si está vacío) ejecute:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key:generate</span></span></code></pre></div><p>Avancemos para crear los correspondientes archivos de migración, sembradora, fábrica y controlador asociados al modelo <code>Task</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make:model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Task</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -mcrsf</span></span></code></pre></div><p>Ya tenemos el andamiaje necesario para empezar a construir nuestra API (backend)...</p>',10),n=[o];function l(r,p,c,h,d,k){return s(),a("div",null,n)}const g=e(t,[["render",l]]);export{u as __pageData,g as default};
